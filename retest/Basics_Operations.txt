Question 1:

You've been tasked with developing a Java program for managing student information. The program should allow users to input details for a student, including their name, age, and grade. Ensure that the age is a non-negative integer and the grade is a non-negative double. Once the details are entered, the program should display the student's information.

Input format :

The first line consists of a String that represents the name.
The second line consists of int which represents age.
The third line consists of a double that represents the grade.

Output format :
The Output should display the student's details.

Sample test cases :
Input 1 :

John Doe
25
85.5

Output 1 :

Student Details:
Name: John Doe
Age: 25
Grade: 85.5

Input 2 :

John Doe
-25
85.5

Output 2 :

Age must be a non-negative integer.
Student Details:
Name: John Doe
Age: 0
Grade: 85.5

Input 3 :

John Doe
25
-85.5

Output 3 :

Grade must be a non-negative double.
Student Details:
Name: John Doe
Age: 25
Grade: 0.0

Input 4 :

John Doe
-25
-85.5

Output 4 :

Age must be a non-negative integer.
Grade must be a non-negative double.
Student Details:
Name: John Doe
Age: 0
Grade: 0.0

====================================================================================================

Question 2:

You are required to implement the following function:

public static int[] rearrangeBySign(int[] array);
The function accepts an array of integers as its argument. The function should rearrange the array so that all positive numbers appear before all negative numbers. The relative order of the positive numbers and negative numbers should be maintained.

Input format :

The first line should contain an integer representing the size of the array.
The second line should contain an array of integers.

Output format :

An array where all positive numbers appear before all negative numbers, maintaining the relative order.
Code constraints :
The input array contains both positive and negative integers.

Sample test cases :

Input 1 :
6
-1 2 -3 4 -5 6

Output 1 :

2 4 6 -1 -3 -5 

Input 2 :
8
12 -7 -5 3 -1 4 -6 10

Output 2 :

12 3 4 10 -7 -5 -1 -6 

====================================================================================================

Question 3:

You are developing a delivery service system that handles deliveries through various methods. Create an interface named DeliveryMethod with a method deliverPackage(). Implement this interface for two delivery methods: DroneDelivery and BikeCourier. Take user input for the package weight and simulate processing deliveries using both methods.

Input format :

The input consists of an integer which represents the package weight.

Output format :

The output displays the simulated processing of deliveries using both drone delivery and bike courier methods. The weight will be rounded to two decimal places.

Refer to the sample output for formatting specifications.
Sample test cases :

Input 1 :

5.75

Output 1 :

Processing drone delivery of package weighing 5.75 kg
Drone delivery processed successfully!
Processing bike courier delivery of package weighing 5.75 kg
Bike courier delivery processed successfully!

Input 2 :

12.00

Output 2 :

Processing drone delivery of package weighing 12.00 kg
Drone delivery processed successfully!
Processing bike courier delivery of package weighing 12.00 kg
Bike courier delivery processed successfully!

