import React, { useEffect, useState } from 'react';
import Header from './components/Headers';
import NoteForm from './components/NoteForm';
import NoteDisplay from './components/NoteDisplay';

const BASE_URL = "https://8080-aadacedeea336375746befone.premiumproject.examly.io";

const App = () => {
  const [notes, setNotes] = useState([]);

  const fetchNotes = () => {
    fetch(BASE_URL + '/getAllNote', {
      method: 'GET',
      headers: { 'Content-Type': 'application/json' },
    })
      .then(response => {
        if (!response.ok) {
          throw new Error('Failed to fetch notes');
        }
        return response.json();
      })
      .then(data => {
        setNotes(data);
      })
      .catch(error => {
        console.error('Error fetching notes:', error);
      });
  };

  useEffect(() => {
    fetchNotes();
  }, []);

  const handleNoteSubmit = (noteData) => {
    fetch(BASE_URL + '/addNote', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(noteData),
    })
      .then(response => {
        if (!response.ok) {
          throw new Error('Failed to add note');
        }
        return response.json();
      })
      .then(() => {
        fetchNotes(); // Refresh the list after adding (optional)
      })
      .catch(error => {
        console.error('Error adding note:', error);
      });
  };

  return (
    <div>
      <Header onRefresh={fetchNotes} />
      <NoteForm onNoteSubmit={handleNoteSubmit} />
      <NoteDisplay notes={notes} />
    </div>
  );
};

export default App;

======================================================================

import React from 'react';

const Header = ({ onRefresh }) => {
  return (
    <header>
      <h1>My Keep Notes</h1>
      <button onClick={onRefresh}>Refresh</button>
    </header>
  );
};

export default Header;

========================================================================

import React from 'react';

function NoteDisplay({ notes = [] }) {
    return (
        <div>
            {notes.length === 0 ?
                <p>No notes available</p>
                :
                notes.map(note => (
                    <div key={note.id}>
                        {note.id} {note.title} {note.description}
                    </div>
                )
                )}
        </div>
    );
}

export default NoteDisplay;

===================================================================

import React, { useState } from 'react';

function NoteForm({ onNoteSubmit }) {
    const [title, setTitle] = useState('');
    const [description, setDescription] = useState('');
    const [errors, setErrors] = useState({});

    const validateForm = () => {
        const newErrors = {};
        if (!title.trim()) {
            newErrors.title = 'Title is required';
        }
        if (!description.trim()) {
            newErrors.description = 'Description is required';
        }
        setErrors(newErrors);
        return Object.keys(newErrors).length === 0;
    };

    const handleSubmit = (event) => {
        event.preventDefault();

        if (validateForm()) {

            const newNote = {
                title,
                description
            };

            if (onNoteSubmit) {
                onNoteSubmit(newNote);
            }
            setTitle('');
            setDescription('');
            setErrors({});
        }
    };

    return (
        <form onSubmit={handleSubmit}>
            <div>
                <input
                    placeholder="Title (required)"
                    value={title}
                    onChange={(e) => setTitle(e.target.value)}
                />
                {errors.title && <p style={{ color: 'red' }}>{errors.title}</p>}
            </div>
            <div>
                <input
                    placeholder="Description (required)"
                    value={description}
                    onChange={(e) => setDescription(e.target.value)}
                />
                {errors.description && <p style={{ color: 'red' }}>{errors.description}</p>}
            </div>
            <button type="submit">Add Note</button>
        </form>
    );
}

export default NoteForm;
