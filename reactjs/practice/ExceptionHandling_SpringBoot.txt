option 1: in controller layer:

@PostMapping("/student")
public ResponseEntity<?> addStudent(@RequestBody Student student) {
    
    try {
        Student savedStudent = studentService.saveStudent(student);
        return ResponseEntity.status(201).body(savedStudent);
    } 
    catch (Exception e) {        
        return ResponseEntity.status(500).body("Failed to save student: " + e.getMessage());
    }
}

=============================================================================

option 2: in service layer:

Example using custom exception thrown from service:


Step 1: Create a custom exception

public class StudentSaveException extends RuntimeException {
    public StudentSaveException(String message) {
        super(message);
    }
}

Step 2: Throw this exception in the service layer when saving fails

@Service
public class StudentServiceImpl implements StudentService {

    @Autowired
    private StudentRepository studentRepository;

    @Override
    public Student saveStudent(Student student) {

        try {
            return studentRepository.save(student);
        } 
	catch (Exception e) {           
            throw new StudentSaveException("Unable to save student: " + e.getMessage());
        }
    }

    @Override
    public List<Student> fetchAllStudent() {
        return studentRepository.findAll();
    }  
}

Step 3: Handle this exception in the controller or a global exception handler

Controller method example:

	@PostMapping("/student")
	public ResponseEntity<?> addStudent(@RequestBody Student student) {

    		try {
        		Student savedStudent = studentService.saveStudent(student);
        		return ResponseEntity.status(201).body(savedStudent);
    		} 
		catch (StudentSaveException e) {
        		return ResponseEntity.status(500).body(e.getMessage());
    		}
	}


Global Exception Handling example:

	@ControllerAdvice
	public class GlobalExceptionHandler {

    		@ExceptionHandler(StudentSaveException.class)
    		public ResponseEntity<String> handleStudentSaveException(StudentSaveException ex) {

        		return ResponseEntity.status(500).body(ex.getMessage());
    		}
	}


