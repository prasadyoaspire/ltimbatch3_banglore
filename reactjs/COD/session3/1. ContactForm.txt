import React, { useState } from 'react';

const ContactForm = () => {
  const [formData, setFormData] = useState({
    firstName: '',
    lastName: '',
    age: '',
    email: '',
    phone: '',
    address: '',
    pincode: '',
    message: ''
  });

  const [errors, setErrors] = useState({});
  const [submitted, setSubmitted] = useState(false);

  const validate = () => {
    const newErrors = {};

    // Required field validations
    if (!formData.firstName.trim()) newErrors.firstName = 'First name is required';
    if (!formData.lastName.trim()) newErrors.lastName = 'Last name is required';
    if (!formData.age.trim()) {
      newErrors.age = 'Age is required';
    } else if (isNaN(formData.age)) {
      newErrors.age = 'Invalid age';
    }

    if (!formData.email.trim()) {
      newErrors.email = 'Email is required';
    } else if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(formData.email)) {
      newErrors.email = 'Invalid email format';
    }

    if (!formData.phone.trim()) {
      newErrors.phone = 'Phone number is required';
    } else if (!/^\d{10}$/.test(formData.phone)) {
      newErrors.phone = 'Invalid phone number';
    }

    if (!formData.address.trim()) newErrors.address = 'Address is required';

    if (!formData.pincode.trim()) {
      newErrors.pincode = 'Pincode is required';
    } else if (!/^\d{6}$/.test(formData.pincode)) {
      newErrors.pincode = 'Invalid pincode';
    }

    if (!formData.message.trim()) newErrors.message = 'Message is required';

    return newErrors;
  };

  const handleChange = (e) => {
    setFormData(prev => ({
      ...prev,
      [e.target.name]: e.target.value
    }));
    setErrors(prev => ({ ...prev, [e.target.name]: '' }));
    setSubmitted(false);
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    const foundErrors = validate();

    if (Object.keys(foundErrors).length === 0) {
      setErrors({});
      setSubmitted(true);
    } else {
      setErrors(foundErrors);
      setSubmitted(false);
    }
  };

  return (
    <form onSubmit={handleSubmit}>
      <div>
        <label htmlFor="firstName">First Name:</label>
        <input name="firstName" id="firstName" value={formData.firstName} onChange={handleChange} />
        {errors.firstName && <p>{errors.firstName}</p>}
      </div>

      <div>
        <label htmlFor="lastName">Last Name:</label>
        <input name="lastName" id="lastName" value={formData.lastName} onChange={handleChange} />
        {errors.lastName && <p>{errors.lastName}</p>}
      </div>

      <div>
        <label htmlFor="age">Age:</label>
        <input name="age" id="age" value={formData.age} onChange={handleChange} />
        {errors.age && <p>{errors.age}</p>}
      </div>

      <div>
        <label htmlFor="email">Email:</label>
        <input name="email" id="email" value={formData.email} onChange={handleChange} />
        {errors.email && <p>{errors.email}</p>}
      </div>

      <div>
        <label htmlFor="phone">Phone:</label>
        <input name="phone" id="phone" value={formData.phone} onChange={handleChange} />
        {errors.phone && <p>{errors.phone}</p>}
      </div>

      <div>
        <label htmlFor="address">Address:</label>
        <input name="address" id="address" value={formData.address} onChange={handleChange} />
        {errors.address && <p>{errors.address}</p>}
      </div>

      <div>
        <label htmlFor="pincode">Pincode:</label>
        <input name="pincode" id="pincode" value={formData.pincode} onChange={handleChange} />
        {errors.pincode && <p>{errors.pincode}</p>}
      </div>

      <div>
        <label htmlFor="message">Message:</label>
        <textarea name="message" id="message" value={formData.message} onChange={handleChange}></textarea>
        {errors.message && <p>{errors.message}</p>}
      </div>

      <button type="submit">Submit</button>

      {submitted && <p>Form submitted successfully!</p>}
    </form>
  );
};

export default ContactForm;

=============================================================

import './App.css';
import ContactForm from './components/ContactForm';

function App() {
  return (
    <div className="App">
       <h1>Contact Form</h1>
      <ContactForm/>
    </div>
  );
}

export default App;
