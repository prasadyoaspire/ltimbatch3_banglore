import React from 'react';

const Header = () => {
  const handleReload = () => window.location.reload();

  return (
    <header>
      <h1>Blood Donation Registration</h1>
      <button onClick={handleReload}>Reload</button>
    </header>
  );
};

export default Header;

============================================

import React from 'react';

const Footer = () => {
  const currentYear = new Date().getFullYear();

  return (
    <footer>
      <p>&copy; {currentYear} Survey Form App</p>
    </footer>
  );
};

export default Footer;

=================================================

import React, { useState } from 'react';

const FormComponent = ({ onSubmit }) => {
  const [formData, setFormData] = useState({
    name: '',
    age: '',
    gender: '',
    city: '',
    phone: '',
    bloodGroup: ''
  });

  const [errors, setErrors] = useState({});

  const validate = () => {
    const newErrors = {};

    if (!formData.name.trim()) newErrors.name = 'Name is required';
    const age = parseInt(formData.age, 10);
    if (!age || age < 18 || age > 60) newErrors.age = 'Age must be between 18 and 60';
    if (!formData.gender) newErrors.gender = 'Select a gender';
    if (!formData.city.trim()) newErrors.city = 'City is required';
    if (!formData.phone.trim()) newErrors.phone = 'Phone is required';
    if (!formData.bloodGroup) newErrors.bloodGroup = 'Select a blood group';

    setErrors(newErrors);
    return Object.keys(newErrors).length === 0;
  };

  const handleChange = (e) => {
    setFormData(prev => ({ ...prev, [e.target.name]: e.target.value }));
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    if (validate()) {
      setErrors({});
      onSubmit(formData);
    }
  };

  return (
    <form onSubmit={handleSubmit}>
      <div>
        <label htmlFor="name">Name:</label>
        <input id="name" name="name" value={formData.name} onChange={handleChange} />
        {errors.name && <p>{errors.name}</p>}
      </div>

      <div>
        <label htmlFor="age">Age:</label>
        <input id="age" name="age" value={formData.age} onChange={handleChange} />
        {errors.age && <p>{errors.age}</p>}
      </div>

      <div>
        <label htmlFor="gender">Gender:</label>
        <select id="gender" name="gender" value={formData.gender} onChange={handleChange}>
          <option value="">--Select--</option>
          <option value="male">Male</option>
          <option value="female">Female</option>
          <option value="other">Other</option>
        </select>
        {errors.gender && <p>{errors.gender}</p>}
      </div>

      <div>
        <label htmlFor="city">City:</label>
        <input id="city" name="city" value={formData.city} onChange={handleChange} />
        {errors.city && <p>{errors.city}</p>}
      </div>

      <div>
        <label htmlFor="phone">Phone:</label>
        <input id="phone" name="phone" value={formData.phone} onChange={handleChange} />
        {errors.phone && <p>{errors.phone}</p>}
      </div>

      <div>
        <label htmlFor="bloodGroup">Blood Group:</label>
        <select id="bloodGroup" name="bloodGroup" value={formData.bloodGroup} onChange={handleChange}>
          <option value="">--Select--</option>
          <option value="A+">A+</option>
          <option value="A-">A-</option>
          <option value="B+">B+</option>
          <option value="B-">B-</option>
          <option value="O+">O+</option>
          <option value="O-">O-</option>
          <option value="AB+">AB+</option>
          <option value="AB-">AB-</option>
        </select>
        {errors.bloodGroup && <p>{errors.bloodGroup}</p>}
      </div>

      <button type="submit">Submit</button>
    </form>
  );
};

export default FormComponent;

============================================

import React, { useState } from 'react';

const SuccessMessage = ({ formData, onClose }) => {
  const [showResponse, setShowResponse] = useState(false);

  return (
    <div>
      <h2>Form Submitted Successfully</h2>
      <p>Click "View Response" to see your submitted data:</p>
      <button onClick={() => setShowResponse(true)}>View Response</button>

      {showResponse && (
        <div>
          <h3>Form Data:</h3>
          <p>Name: {formData.name}</p>
          <p>Age: {formData.age}</p>
          <p>Gender: {formData.gender}</p>
          <p>City: {formData.city}</p>
          <p>Phone: {formData.phone}</p>
          <p>Blood Group: {formData.bloodGroup}</p>
          <button onClick={onClose}>Close</button>
        </div>
      )}
    </div>
  );
};

export default SuccessMessage;

=============================================

import React, { useState } from 'react';
import Header from './components/Header';
import Footer from './components/Footer';
import FormComponent from './components/FormComponent';
import SuccessMessage from './components/SuccessMessage';

const App = () => {
  const [submittedData, setSubmittedData] = useState(null);

  const handleFormSubmit = (data) => {
    setSubmittedData(data);
  };

  const handleCloseSuccess = () => {
    setSubmittedData(null); 
  };

  return (
    <div>
      <Header />
      
      <main>
        {!submittedData ? (
          <FormComponent onSubmit={handleFormSubmit} />
        ) : (
          <SuccessMessage formData={submittedData} onClose={handleCloseSuccess} />
        )}
      </main>

      <Footer />
    </div>
  );
};

export default App;
