
=============================================================
SurveyForm.jsx
=============================================================
import React, { useState } from 'react';
import axios from 'axios';

function SurveyForm() {
    const[title,setTitle] = useState('');
    const[description,setDescription] = useState('');
    const[formErrors,setFormErrors] = useState({});

    const validateSurveyForm = () => {
        const errors = {};
        if(!title) {
            errors.title = "Title is required";
        }
        if(!description) {
            errors.description = "Description is required";
        }        
        setFormErrors(errors);
        return Object.keys(errors).length === 0;
    }

    const handleSubmit = (event) => {
        event.preventDefault();
        if(validateSurveyForm()) {
            const payload = {
                title: title,
                description: description
            }
            axios.post("https://8080-aadacedeea335454953bfbbaefaone.premiumproject.examly.io/api/surveys",payload)
            .then(resp=>alert("New Survey Created."));    
            
            setTitle('');
            setDescription('');
            setFormErrors({});
        }        
    }

    return(
        <>
            <form onSubmit={handleSubmit}>
                <div>
                    <label>Title</label>
                    <input type="text" name="title" value={title}
                        onChange={event=>setTitle(event.target.value)}/>
                    {formErrors.title && <span>{formErrors.title}</span>}    
                </div>
                <div>
                    <label>Description</label>
                    <textarea rows={2} cols={12} name="description" value={description}
                        onChange={event=>setDescription(event.target.value)}/>
                    {formErrors.description && <span>{formErrors.description}</span>}        
                </div>
                <button type="submit">Add Survey</button>

            </form>        
        </>
    )
}

export default SurveyForm;

=============================================================
SurveyList.jsx
=============================================================

import React, { useEffect, useState } from 'react';
import axios from 'axios';
import { Link } from 'react-router-dom';

function SurveyList() {

    const [surveys, setSurveys] = useState([]);

    useEffect(() => {
        axios.get("https://8080-aadacedeea335454953bfbbaefaone.premiumproject.examly.io/api/surveys")
            .then(resp => setSurveys(resp.data));
    }, []);

    const handleDelete = (id) => {
        axios.delete("https://8080-aadacedeea335454953bfbbaefaone.premiumproject.examly.io/api/surveys/"+id)
        .then(resp=> alert("Successfully deleted."));
    }

    return (
        <>
            {
                surveys.length > 0 &&
                surveys.map(survey =>
                    <div>
                        <h3>Title: {survey.title}</h3>
                        <b>Description: </b> <span>{survey.description}</span> &nbsp;
                        <Link to={`/survey/edit/${survey.id}`}><button>Edit</button></Link>&nbsp;&nbsp;
                        <button onClick={()=> handleDelete(survey.id)}>Delete</button>&nbsp;&nbsp;
                        <Link to={`/survey/details/${survey.id}`}><button>View</button></Link>&nbsp;&nbsp;
                        <hr></hr>
                    </div>
                )
            }
        </>
    )
}

export default SurveyList;

=============================================================
SurveyDetails.jsx
=============================================================

import React, { useEffect, useState } from 'react';
import axios from 'axios';
import { useParams } from 'react-router-dom';

function SurveyDetails() {

    const[survey,setSurvey] = useState(null);
    const {sid} = useParams();

    useEffect(()=> {
        axios.get("https://8080-aadacedeea335454953bfbbaefaone.premiumproject.examly.io/api/surveys/"+sid)
        .then(resp=> setSurvey(resp.data));
    },[]);

    return(
        <>
        {
            survey !== null &&
            <div>
                <h2>Id: {survey.id}</h2>
                <h3>Title: {survey.title}</h3>
                <h4>Description: </h4> <span>{survey.description}</span>
            </div>
        }
        
        </>
    )
}

export default SurveyDetails;

=============================================================
SurveyUpdate.jsx
=============================================================

import React, { useEffect, useState } from 'react';
import { useParams } from 'react-router-dom';
import axios from 'axios';

function SurveyUpdate() {

    const [title, setTitle] = useState('');
    const [description, setDescription] = useState('');
    const [formErrors, setFormErrors] = useState({});

    const { sid } = useParams();

    useEffect(() => {
        axios.get("https://8080-aadacedeea335454953bfbbaefaone.premiumproject.examly.io/api/surveys/" + sid)
            .then(resp => {
                setTitle(resp.data.title);
                setDescription(resp.data.description);
            })
    }, [sid]);

    const validateSurveyForm = () => {
        const errors = {};
        if (!title) {
            errors.title = "Title is required";
        }
        if (!description) {
            errors.description = "Description is required";
        }
        setFormErrors(errors);
        return Object.keys(errors).length === 0;
    }

    const handleSubmit = (event) => {
        event.preventDefault();
        if (validateSurveyForm()) {
            const payload = {
                title: title,
                description: description
            }
            axios.put("https://8080-aadacedeea335454953bfbbaefaone.premiumproject.examly.io/api/surveys/" + sid, payload)
                .then(resp => alert("Survey Updated Successfully."));

            setTitle('');
            setDescription('');
            setFormErrors({});
        }
    }

    return (
        <>
            <form onSubmit={handleSubmit}>
                <div>
                    <label>Title</label>
                    <input type="text" name="title" value={title}
                        onChange={event => setTitle(event.target.value)} />
                    {formErrors.title && <span>{formErrors.title}</span>}
                </div>
                <div>
                    <label>Description</label>
                    <textarea rows={2} cols={12} name="description" value={description}
                        onChange={event => setDescription(event.target.value)} />
                    {formErrors.description && <span>{formErrors.description}</span>}
                </div>
                <button type="submit">Update Survey</button>

            </form>

        </>
    )
}

export default SurveyUpdate;

=============================================================
Navbar.jsx
=============================================================

import React from 'react';
import { Link } from 'react-router-dom';

function NavBar() {
    return (
        <>
            <h1>Online Survey and Analysis Platform</h1>
            <Link to="/add"> <button>Add Survey</button> </Link>
            <Link to="/surveys"> <button>Surveys</button> </Link>
        </>
    )
}

export default NavBar;


=============================================================
App.js
=============================================================

import './App.css';
import { BrowserRouter, Routes, Route } from 'react-router-dom';
import SurveyForm from './Components/SurveyForm';
import SurveyList from './Components/SurveyList';
import NavBar from './Components/NavBar';
import SurveyDetails from './Components/SurveyDetails';
import SurveyUpdate from './Components/SurveyUpdate';

function App() {
  return (
    <BrowserRouter>
      <NavBar/>
      <Routes>
        <Route path="/add" element={<SurveyForm />} />
        <Route path="/surveys" element={<SurveyList />} />
        <Route path="/survey/details/:sid" element={<SurveyDetails/>}/>
        <Route path="/survey/edit/:sid" element={<SurveyUpdate/>}/>
      </Routes>
    </BrowserRouter>
  );
}

export default App;
