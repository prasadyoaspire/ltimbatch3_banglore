import java.util.*;

class Main {
    public static void main(String[] args) {
		Scanner sc = new Scanner(System. in);	
		int numHands = sc. nextInt();
		int cardsPerHand = sc. nextInt();		
   
        String[] suit = {"Spades", "Hearts", "Diamonds", "Clubs"};
        String[] rank = {"Ace", "2", "3", "4","5", "6", "7", "8", "9", "10","Jack", "Queen", "King"};
        
        List<String> deck = new ArrayList<>();
        
        for (int i = 0; i < suit.length; i++)
            for (int j = 0; j < rank.length; j++)import java.util.*;

class Main {
    public static void main(String[] args) {
		Scanner sc = new Scanner(System. in);	
		int numHands = sc. nextInt();
		int cardsPerHand = sc. nextInt();		
   
        String[] suit = {"Spades", "Hearts", "Diamonds", "Clubs"};
        String[] rank = {"Ace", "2", "3", "4","5", "6", "7", "8", "9", "10","Jack", "Queen", "King"};
        
        List<String> deck = new ArrayList<>();
        
        for (int i = 0; i < suit.length; i++)
            for (int j = 0; j < rank.length; j++)
                deck.add(rank[j] + " of " + suit[i]); 
                
        Collections.shuffle(deck, new Random(0)); 
        
        if (numHands * cardsPerHand > deck.size()) {
            System.out.println("Not enough cards.");
            return;
        }    
        for (int i = 0; i < numHands; i++)
            System.out.println(dealHand(deck, cardsPerHand));
    }
  
    public static List<String> dealHand(List<String> deck, int n) {
        int deckSize = deck.size();
        List<String> handView = deck.subList(deckSize - n, deckSize);
        List<String> hand = new ArrayList<>(handView);
        handView.clear();
        return hand;
    }
}

                deck.add(rank[j] + " of " + suit[i]); 
                
        Collections.shuffle(deck, new Random(0)); 
        
        if (numHands * cardsPerHand > deck.size()) {
            System.out.println("Not enough cards.");
            return;
        }    
        for (int i = 0; i < numHands; i++)
            System.out.println(dealHand(deck, cardsPerHand));
    }
  
    public static List<String> dealHand(List<String> deck, int n) {
        int deckSize = deck.size();
        List<String> handView = deck.subList(deckSize - n, deckSize);
        List<String> hand = new ArrayList<>(handView);
        handView.clear();
        return hand;
    }
}
