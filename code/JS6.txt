<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Validation</title>
  <link rel="stylesheet" href="style.css" />
</head>
<body>
  <div class="container">
    <h1>Login Form</h1>
    
    <label for="username">Username</label>
    <input type="text" id="username" placeholder="Enter username" />

    <label for="password">Password</label>
    <input type="password" id="password" placeholder="Enter password" />

    <button onclick="login()">Login</button>

    <p id="result"></p>
  </div>

  <script src="script.js"></script>
  
</body>
</html>

===============================================================

function login() {
    const username = document.getElementById("username").value.trim();
    const password = document.getElementById("password").value.trim();
    const result = document.getElementById("result");
  
    if (username === "" || password === "") {
      result.textContent = "Please enter both username and password.";
      return;
    }
  
    if (username === "useradmin123" && password === "Pass123@") {
      result.textContent = "Login successful.";
    } else if (username === "useradmin123") {
      result.textContent = "Invalid password.";
    } else {
      result.textContent = "Login failed.";
    }
  }
  

=================================================================

body {
    font-family: Arial, sans-serif;
    background-color: #f5f5f5;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0;
  }
  
  .container {
    background-color: white;
    padding: 30px;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    width: 300px;
  }
  
  h1 {
    text-align: center;
    margin-bottom: 20px;
  }
  
  label {
    display: block;
    margin-top: 10px;
    margin-bottom: 5px;
  }
  
  input {
    width: 100%;
    padding: 8px;
    margin-bottom: 10px;
    box-sizing: border-box;
  }
  
  button {
    width: 100%;
    padding: 10px;
    background-color: #4CAF50; /* green */
    color: white;
    border: none;
    border-radius: 4px;
    font-size: 16px;
    cursor: pointer;
  }
  
  button:hover {
    background-color: #45a049;
  }
  
  #result {
    margin-top: 15px;
    text-align: center;
    font-weight: bold;
  }


===============================================================================================

const puppeteer = require('puppeteer');
(async () => {
    const browser = await puppeteer.launch({
      headless: false,
      args: ['--headless', '--disable-gpu', '--remote-debugging-port=9222', '--no-sandbox', '--disable-setuid-sandbox']
    });
    const page = await browser.newPage();
    try{
      await page.goto('https://8081-aadacedeea335382468deabbcfedbaaadone.premiumproject.examly.io/');
      await page.setViewport({
        width:1200,
        height:1200,
      })
      await page.waitForSelector('h1',{timeout : 2000});
      
      const result1 = await page.evaluate(()=>{
        let heading = document.querySelector(".container");
        return heading.innerHTML;
      })
      console.log('TESTCASE:verify_h1_element:success');
    }
    catch(e){
      console.log('TESTCASE:verify_h1_element:failure');
    }
    
    const page1 = await browser.newPage();
    try{
      await page1.goto('https://8081-aadacedeea335382468deabbcfedbaaadone.premiumproject.examly.io/');
      await page1.setViewport({
        width:1200,
        height:800,
      })
      await page1.waitForSelector('div',{timeout : 2000});
      
    const result1 = await page1.evaluate(()=>{
        let heading = document.querySelector("#username");
        return heading.innerHTML;
    })
    const result2 = await page1.evaluate(()=>{
      let heading = document.querySelector("#password");
      return heading.innerHTML;
  })
    
      console.log('TESTCASE:verify_username_and_password_inputs:success');
    }
    catch(e){
      console.log('TESTCASE:verify_username_and_password_inputs:failure');
    } 

    const page2 = await browser.newPage();
    try{
      await page2.goto('https://8081-aadacedeea335382468deabbcfedbaaadone.premiumproject.examly.io/');
      await page2.setViewport({
        width:1200,
        height:800,
      })

      await page2.waitForSelector('label',{timeout : 2000});
      
      const result1 = await page2.evaluate(()=>{
        let heading = document.querySelector("#result");
        return heading.innerHTML;
    })
    
      console.log('TESTCASE:verify_result_element:success');
    }
    catch(e){
      console.log('TESTCASE:verify_result_element:failure');
    }

  const page3 = await browser.newPage();
  try{
    await page3.goto('https://8081-aadacedeea335382468deabbcfedbaaadone.premiumproject.examly.io/');
    await page3.setViewport({
      width:1200,
      height:800,
    })
    await page3.waitForSelector('input',{timeout : 2000});

    console.log('TESTCASE:verify_input_element:success');
  }
  catch(e){
    console.log('TESTCASE:verify_input_element:failure');
  }

  const page4 = await browser.newPage();
  try{
    await page4.goto('https://8081-aadacedeea335382468deabbcfedbaaadone.premiumproject.examly.io/');
    await page4.setViewport({
      width:1200,
      height:800,
    })
    await page4.waitForSelector('button',{timeout : 2000});
    console.log('TESTCASE:verify_button_element:success');
  }
  catch(e){
    console.log('TESTCASE:verify_button_element:failure');
  }

  const page5 = await browser.newPage();

  try {
    await page5.goto('https://8081-aadacedeea335382468deabbcfedbaaadone.premiumproject.examly.io/'); // Replace with the actual URL of your HTML page
    await page5.setViewport({
      width: 1200,
      height: 800,
    });

    // Click the "Login" button
    await page5.click('button');

    // Wait for the validation message to be displayed
    await page5.waitForSelector('#result',{timeout : 2000});

    // Get the validation message text
    const validationMessage = await page5.$eval('#result', (element) => element.textContent);

    // Check if the validation message matches the expected values
    if (validationMessage === 'Please enter both username and password.') {
      console.log('TESTCASE:verify_validation_message_please_enter_both_username_and_password:success');
    } else {
      console.log('TESTCASE:verify_validation_message_please_enter_both_username_and_password:failure');
    }
  } catch (e) {
    console.log('TESTCASE:verify_validation_message_please_enter_both_username_and_password:failure');
  }

  const page6 = await browser.newPage();

  try {
    await page6.goto('https://8081-aadacedeea335382468deabbcfedbaaadone.premiumproject.examly.io/'); // Replace with the actual URL of your HTML page
    await page6.setViewport({
      width: 1200,
      height: 800,
    });

    // Fill in the username and password fields
    await page6.type('#username', 'useradmin123');
    await page6.type('#password', 'Pass123@');

    // Click the "Login" button
    await page6.click('button');

    // Wait for the validation message to be displayed
    await page6.waitForSelector('#result',{timeout : 2000});

    // Get the validation message text
    const validationMessage = await page6.$eval('#result', (element) => element.textContent);

    // Check if the validation message matches the expected values
    if (validationMessage === 'Login successful.') {
      console.log('TESTCASE:verify_validation_message_login_successful:success');
    } else {
      console.log('TESTCASE:verify_validation_message_login_successful:failure');
    }
  } catch (e) {
    console.log('TESTCASE:verify_validation_message_login_successful:failure');
  }

  const page7 = await browser.newPage();

  try {
    await page7.goto('https://8081-aadacedeea335382468deabbcfedbaaadone.premiumproject.examly.io/'); // Replace with the actual URL of your HTML page
    await page7.setViewport({
      width: 1200,
      height: 800,
    });

    // Fill in the username and password fields with invalid values
    await page7.type('#username', 'useradmin123');
    await page7.type('#password', 'password123');

    // Click the "Login" button
    await page7.click('button');

    // Wait for the validation message to be displayed
    await page7.waitForSelector('#result',{timeout : 2000});

    // Get the validation message text
    const validationMessage = await page7.$eval('#result', (element) => element.textContent);

    // Check if the validation message matches the expected values
    if (validationMessage === 'Invalid password.') {
      console.log('TESTCASE:verify_validation_message_invalid_password:success');
    } else {
      console.log('TESTCASE:verify_validation_message_invalid_password:failure');
    }
  } catch (e) {
    console.log('TESTCASE:verify_validation_message_invalid_password:failure');
  }


  
  finally{
    await page.close();
    await page1.close();
    await page2.close();
    await page3.close();
    await page4.close();
    await page5.close();
    await page6.close();
    await page7.close();
    await browser.close();
  }
  
})();
========================================================================================

  