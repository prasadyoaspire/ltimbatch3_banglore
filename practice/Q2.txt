Question1:
------------------------------------------------------------------
Create a Class called Product with the following attributes

id  - int
name   - String
quantity  - String

all attributes are private
create all argument constructor
For Each property create getter method.

Create another class called Main 
Inside Main class define main method.

Your task is:

1. Creating a list of Product objects. 

2. Taking input from the user.

3. Storing the input as Product objects in an ArrayList.

4. Display all stored products.

5. Display all out of stock products (quantity ==0)

6. Calculate total stock (sum of all stocks) - (TO-DO)

--------------------------------------------------------------------------------------------------
Implemenation:
--------------------------------------------------------------------------------------------------

import java.util.*;
  
//creating class called book
class Product {

    //attributes
    private int id;
    private String name;
    private int quantity;

     //all args constructor
    Product(int id,String name,int quantity) {
      this.id = id;
      this.name = name;
      this.quantity = quantity;
    }
  
     //getter methods for all properties    
    int getId() {
       return id;
    }    
    String getName() {
       return name;
    }     
    int getQuantity() {
      return quantity;
    }
    
}

  //create a Main class
class Main {
    public static void main(String[] args) {
        
        Scanner sc = new Scanner(System.in);
        
        //1. read input for no of elements
        int n = Integer.parseInt(sc.nextLine());
        
        //2. create array list of product objects
        ArrayList<Product> productList = new ArrayList<>();
        
        //3.for each iteration, do the following steps
        for(int i=0;i<n;i++) {
            
            //3.1. read product data from user
            int id = Integer.parseInt(sc.nextLine());
            String name = sc.nextLine();
            int qty = Integer.parseInt(sc.nextLine());
            
            //3.2.create an object using input values     
            Product product = new Product(id,name,qty);
            
            //3.3.add this product object to the productList
            productList.add(product);
        }
        
        //4.Displaying all stored products
        System.out.println("All Products");
        for(Product p: productList) {
            System.out.println("Id: "+p.getId()+", Name: "+p.getName()+", Quantity: "+p.getQuantity());
        }
        
        //5.Filtering out of stock products (i.e, quantity=0)
        System.out.println("Out of stock products");
          for(Product p: productList) {
            if(p.getQuantity() == 0) {
              System.out.println("Id: "+p.getId()+", Name: "+p.getName()+", Quantity: "+p.getQuantity());  
            }
        }
    }
}

----------------------------------------------------------------------
Sample Input:

10
Iphone15
50
20
Samsung30
0
30
Nokia50
20
--------------------------------------------------------------------------------

Sample Output:

All Products
Id: 10, Name: Iphone15, Quantity: 50
Id: 20, Name: Samsung30, Quantity: 0
Id: 30, Name: Nokia50, Quantity: 20
Out of stock products
Id: 20, Name: Samsung30, Quantity: 0

======================================================================================

Program 2: (for Practice)

Create a class Student with the following fields:

int rollNumber

String name

boolean isPresent

// do the same operations as defined above

Additional feature:

 1. filtering students:

    Displays details of students who are absent (i.e., isPresent == false).

     
